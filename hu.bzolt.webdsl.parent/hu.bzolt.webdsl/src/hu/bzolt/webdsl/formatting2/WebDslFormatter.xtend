/*
 * generated by Xtext 2.11.0
 */
package hu.bzolt.webdsl.formatting2

import com.google.inject.Inject
import hu.bzolt.webdsl.component.ComponentFormatter
import hu.bzolt.webdsl.form.FormFormatter
import hu.bzolt.webdsl.services.WebDslGrammarAccess
import hu.bzolt.webdsl.webDsl.AbstractElement
import hu.bzolt.webdsl.webDsl.Component
import hu.bzolt.webdsl.webDsl.DomainModel
import hu.bzolt.webdsl.webDsl.Form
import org.eclipse.xtext.formatting2.FormatterRequest
import org.eclipse.xtext.formatting2.IFormattableDocument
import org.eclipse.xtext.xbase.formatting2.XbaseFormatter

class WebDslFormatter extends XbaseFormatter
{
	@Inject
	extension WebDslGrammarAccess

	@Inject
	ComponentFormatter componentFormatter
	
	@Inject
	FormFormatter formFormatter

	def dispatch void format(DomainModel d, extension IFormattableDocument document)
	{
		d.elements.reverseView.tail.forEach[e|e.append[setNewLines(2, 2, 2)]]
		for (AbstractElement element : d.elements)
		{
			element.format;
		}
	}

	def dispatch void format(Component c, extension IFormattableDocument document)
	{
		componentFormatter.format(c, document)
	}

//	def dispatch void format(Entity e, extension IFormattableDocument document)
//	{
//		entityFormatter.format(e, document)
//	}
	def dispatch void format(Form f, extension IFormattableDocument document)
	{
		formFormatter.format(f, document)
	}

	override protected initialize(FormatterRequest request)
	{
		super.initialize(request)
		componentFormatter.init(request)
		formFormatter.init(request)
	}

	override protected reset()
	{
		super.reset()
		componentFormatter.res
		formFormatter.res
	}
}
