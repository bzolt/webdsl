/*
 * generated by Xtext 2.11.0
 */
package hu.bzolt.webdsl.request

import hu.bzolt.webdsl.webDsl.Paging
import hu.bzolt.webdsl.webDsl.Request
import hu.bzolt.webdsl.webDsl.RequestParameter
import hu.bzolt.webdsl.webDsl.Url
import hu.bzolt.webdsl.webDsl.UrlSegment
import hu.bzolt.webdsl.webDsl.WebDslPackage
import org.eclipse.xtext.formatting2.FormatterRequest
import org.eclipse.xtext.formatting2.IFormattableDocument
import org.eclipse.xtext.xbase.formatting2.XbaseFormatter

class RequestFormatter extends XbaseFormatter
{
	def dispatch void format(Request r, extension IFormattableDocument document)
	{
		r.regionFor.feature(WebDslPackage.Literals.REQUEST__METHOD).prepend[noSpace]
		r.regionFor.keyword("list").surround[oneSpace]
		r.regionFor.keyword("of").surround[oneSpace]
		r.regionFor.feature(WebDslPackage.Literals.REQUEST__ENTITY).surround[oneSpace]
		r.regionFor.keyword("on").surround[oneSpace]
		r.regionFor.keyword("to").surround[oneSpace]
		r.url.format(document)
		r.regionFor.keyword("pageable").surround[oneSpace]
		r.regionFor.keyword("with").surround[oneSpace]
		r.regionFor.keyword("principal").surround[oneSpace]
		r.regionFor.feature(WebDslPackage.Literals.REQUEST__NAME).surround[noSpace]
		r.regionFor.keyword("|").append[noSpace]
	}

	def dispatch void format(Url u, extension IFormattableDocument document)
	{
		u.regionFor.keyword("/").append[noSpace]
		u.segments.forEach[s | s.format(document)]
		u.regionFor.keyword("?").surround[noSpace]
		u.regionFor.keyword("&").surround[noSpace]
	}

	def dispatch void format(UrlSegment s, extension IFormattableDocument document)
	{
		s.regionFor.keyword("{").surround[noSpace]
		s.regionFor.keyword(":").surround[noSpace]
		s.regionFor.keyword("}").prepend[noSpace]
	}
	
	def dispatch void format(RequestParameter p, extension IFormattableDocument document)
	{
		p.regionFor.keyword(":").surround[oneSpace]
		p.regionFor.keyword("!").prepend[noSpace]
	}
	
	def dispatch void format(Paging p, extension IFormattableDocument document)
	{
		p.regionFor.keyword("(").append[noSpace]
		p.regionFor.keyword(":").surround[oneSpace]
		if (p.page !== null && p.size !== null) {
			p.regionFor.feature(WebDslPackage.Literals.PAGING__PAGE).append[oneSpace]
		}
		p.regionFor.keyword(")").prepend[noSpace]
	}

	def init(FormatterRequest request)
	{
		initialize(request)
	}

	def res()
	{
		reset
	}
}
